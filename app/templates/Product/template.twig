{# Language code of the whole preview template #}
{% set langCode = 'en_US' %}

{# List of fields to display on overview table after description #}
{% set tableFields = ['id', 'sku', 'ean', 'mpn', 'price', 'rrp', 'quantity'] %}

{# List of fields to be displayed as badges after overview table #}
{% set badgeFields = ['sku', 'brand', 'catalog', 'productSerie'] %}

{# List of linked entities that can be edited via preview mode #}
{% set editableBadgeFields = ['brand', 'catalog', 'productSerie'] %}

{# If set to false, badges with empty values will be skipped #}
{% set displayEmptyBadgeFields = false %}

{% set product = entities[0] %}
{% set language = 'main' %}

{% set mainImage = null %}
{% set images = [] %}
{% for productFile in product.productFiles %}
    {% set file = productFile.file %}
    {% if file.mimeType in ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/tiff', 'image/svg+xml'] %}
        {% if productFile.isMainImage %}
            {% set mainImage = file %}
        {% else %}
            {% set images = images|merge([file]) %}
        {% endif %}
    {% endif %}
{% endfor %}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{ product.name }}</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #2980b9;
            --text-color: #333;
            --bg-color: #fff;
            --border-color: #ddd;
            --table-header-bg: #ecf0f1;
            --status-color: #1a75d1;

            font-family: sans-serif;
        }

        body {
            margin: 0;
            background: var(--bg-color);
            color: var(--text-color);
            line-height: 1.5;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 2em;
            background: var(--bg-color);
            border-radius: 5px;
            overflow: hidden;
            font-size: 0.95em;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            border: 1px solid var(--border-color);
        }

        table tbody tr td {
            border-bottom: 1px solid var(--border-color);
            padding: 0.75em 1em;
        }

        table tbody tr td[colspan="2"] {
            background: var(--table-header-bg);
            font-weight: 600;
            color: var(--primary-color);
        }

        table tbody tr:last-child td {
            border-bottom: none;
        }

        picture {
            background: var(--bg-color);
            display: block;
        }

        picture img {
            width: 100%;
            height: 100%;
            display: block;
            object-fit: contain;
            object-position: center;
        }

        header, main {
            max-width: 1400px;
            margin: 0 auto;
            padding: 1.5em;
        }

        header h1 {
            color: var(--primary-color);
            font-size: 1.8em;
            margin-bottom: 0.25em;
        }

        header .status-info {
            margin-bottom: 1.5em;
            row-gap: .5em;
        }

        header .status-info .item {
            font-size: .9em;
            font-weight: bold;
            background-color: var(--table-header-bg);
            border-radius: .5em;
            padding: .25em .75em;
            line-height: 1;
        }

        header .status-info .tags .item {
            padding: .3em .8em;
            margin-left: .5em;
        }

        header .status-info .item.product-status {
            color: var(--status-color);
            background-color: var(--bg-color);
            border: 2px solid var(--status-color);
        }

        header .row {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: flex-start;
        }

        header .fields {
            flex: 1 1 50%;
            padding-right: 4em;
        }

        header .main-image {
            flex: 1 1 35%;
            display: flex;
            justify-content: flex-end
        }

        header picture {
            min-height: 200px;
        }

        header picture img {
            display: block;
            max-width: 100%;
            height: auto;
            border-radius: 5px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        section.description {
            margin-bottom: 1em;
            text-align: justify;
        }

        .overview table {
            box-shadow: none;
        }

        section.branding {
            display: flex;
            flex-wrap: wrap;
            gap: 1em;
            margin-bottom: 1em;
        }

        section.branding .item {
            background: #ffffff;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            padding: 0.5em 1em;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }

        section.branding .item .name {
            font-weight: 600;
            color: var(--primary-color);
            margin-right: 0.5em;
        }

        main h2 {
            color: var(--primary-color);
            font-weight: 700;
            margin: 1em 0 0.5em;
        }

        .gallery {
            margin-top: 2em;
        }

        .gallery .row {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            gap: 1em;
        }

        .gallery .row .item {
            border-radius: 5px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .gallery .row .item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .gallery .row .item > picture {
            height: 100%;
        }

        section.components p {
            text-align: center;
            padding: 50px 0;
            font-size: 1.2em;
            color: #777777;
        }

        section.components .row {
            display: flex;
        }

        section.components .row.cols-4 {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 2em;
        }

        section.components .component:not(:first-child) {
            margin-top: 2em;
        }

        section.attributes h2,
        section.components h2 {
            margin-top: 2em;
        }

        section.attributes table td > span:empty:before {
            content: 'Null';
            font-style: italic;
            opacity: .5;
        }

        @media screen and (max-width: 640px) {
            header picture, header .fields {
                flex: 1 1 100%;
                padding: 0;
            }

            .gallery .row {
                grid-template-columns: repeat(2, 1fr);
            }

            section.components .row.cols-4 {
                display: grid;
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
<header>
    <h1 {{ product|editable }}>{{ product.name }}</h1>
    <div class="row status-info">
        <div class="item product-status">{{ translate(product.productStatus, langCode, scope: 'Product') }}</div>
        {% if product.tag is not empty %}
            <div class="row tags">
                {% for tag in product.tag %}
                    <div class="item">{{ tag }}</div>
                {% endfor %}
            </div>
        {% endif %}
    </div>
    <div class="row">
        <div class="fields">
            <section class="description">
                {{ product.longDescription|raw }}
            </section>
            <section class="overview">
                {% if tableFields is not empty %}
                    <table>
                        <tbody>
                        {% for field in tableFields %}
                            {% set value = get(product, field) %}
                            {% set displayValue = value is iterable ? value.name ?? value.id ?? value|map(v => translateOption(v, langCode, field, 'Product'))|join(', ') : value %}
                            <tr>
                                <td>{{ translate(field, langCode, 'fields', 'Product') }}</td>
                                <td>{{ displayValue }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </section>
            <section class="branding">
                {% for field in badgeFields %}
                    {% set value = get(product, field) %}
                    {% if value is not empty or displayEmptyBadgeFields %}
                        {% set displayValue = value is iterable ? value.name ?? value.id ?? value|map(v => translateOption(v, langCode, field, 'Product'))|join(', ') : value %}
                        <div class="item" {{ value|editable }}>
                            <span class="name">{{ translate(field, langCode, 'fields', 'Product') }}: </span>{{ displayValue ?? 'Null' }}
                        </div>
                    {% endif %}
                {% endfor %}
            </section>
        </div>
        <div class="main-image">
            {% if mainImage is not null %}
                <picture>
                    <img src="data:{{ mainImage.mimeType }};base64,{{ convertFileToBase64(mainImage) }}"
                         alt="Main image">
                </picture>
            {% endif %}
        </div>
    </div>
</header>
<main>
    {% if images is not empty %}
        <section class="gallery">
            <h2>{{ translate('files', langCode, 'fields', 'Product') }}</h2>
            <div class="row">
                {% for image in images %}
                    <div class="item">
                        <picture>
                            <img src="data:{{ image.mimeType }};base64,{{ convertFileToBase64(image) }}"
                                 alt="Main image">
                        </picture>
                    </div>
                {% endfor %}
            </div>
        </section>
    {% endif %}

    <section class="attributes">
        {% set attributeGroups = {} %}

        {% if product.productAttributeValues %}
            {% for pav in product.productAttributeValues %}
                {% if pav.language == language %}
                    {% set attribute = pav.attribute %}

                    {% set data = {
                        'attribute': attribute,
                        'pav': pav,
                        'displayValue': formatPAV(pav)
                    } %}

                    {% if pav.attributeType == 'file' and pav.valuePathsData['thumbnails'] is not empty %}
                        {% set data = data|merge({ 'media': true }) %}
                    {% endif %}

                    {% set tab = attributeGroups[attribute.attributeTabName] ?? {} %}
                    {% if tab[attribute.attributeGroupName] %}
                        {% set tmp = tab[attribute.attributeGroupName]|merge({(attribute.name): data}) %}
                    {% else %}
                        {% set tmp = {(attribute.name): data} %}
                    {% endif %}

                    {% set tab = tab|merge({(attribute.attributeGroupName): tmp}) %}
                    {% set attributeGroups = attributeGroups|merge({(attribute.attributeTabName): tab}) %}
                {% endif %}
            {% endfor %}
        {% endif %}

        {% for tabName, tab in attributeGroups %}
            <h2>{{ tabName ?: translate('productAttributeValues', langCode, 'fields', 'Product') }}</h2>

            <table>
                <tbody>
                {% for key, attribute in tab %}
                    <tr>
                        <td colspan="2">{{ key ?: translate('noGroup', langCode, scope: 'Product') }}</td>
                    </tr>
                    {% for name, data in attribute %}
                        <tr>
                            <td width="50%"><span {{ data.attribute|editable }}>{{ data.attribute.name }}</span></td>
                            <td width="50%">
                                {% if data.media %}
                                    <picture {{ data.pav|editable }} style="max-width: 300px">
                                        <img src="{{ data.displayValue }}" alt="">
                                    </picture>
                                {% elseif data.pav.attributeType in ['wysiwyg', 'markdown'] %}
                                    <div {{ data.pav|editable }}>{{ data.displayValue|raw }}</div>
                                {% else %}
                                    <span {{ data.pav|editable }}>{{ data.displayValue is iterable ? data.displayValue|join(', ') : data.displayValue }}</span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                {% endfor %}
                </tbody>
            </table>
        {% endfor %}
    </section>

    <section class="components">
        <h2>{{ translate('components', langCode, 'fields', 'Product') }}</h2>
        {% if product.components is not defined %}
            {{ translate('componentsNotInstalled', langCode, 'messages', 'Product') }}
        {% elseif product.components is not empty %}
            <div class="component">
                {% for component in product.components %}
                    {% set component = component|prepareHtmlField %}
                    {{ component.html|raw }}
                {% endfor %}
            </div>
        {% else %}
            {{ translate('emptyComponents', langCode, 'messages', 'Product') }}
        {% endif %}
    </section>
</main>
</body>
</html>
